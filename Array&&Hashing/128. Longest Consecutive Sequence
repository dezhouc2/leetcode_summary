
```python
time:o(n)
space:o(n)

思路:


暴力算法先排序然后计算最长的长度 -> 因为排序好了所以知道每一个最长的子序列头节点 -> 找到头接点然后根据完整的子序列计算最大长度


非暴力算法:
  
  先确定每一个数值的前一个数 用set() 来封装所有的数值
    如果当前数值-1 不在set()里面的话:
    
      ## 通过这个方法来找头节点
        计算长度且继续看目前数值的前一个数是否在set()
    
      更新最长的长度
    
    如果当前数值-1 在set()里面:
      跳过


class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        
        viz = set(nums)
        result = 0
        
        for ele in nums:
            if ele-1 not in viz:
                currlen = 1
                while ele+currlen in viz:
                    currlen = currlen+1
                
                result = max(result,currlen)
        
        return result










```
